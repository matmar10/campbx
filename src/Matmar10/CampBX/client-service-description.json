{
    "name": "CampBX",
    "description": "REST API for the CampBX Bitcoin USD currency exchange based in the USA",
    "apiVersion": "1",
    "baseUrl": "https://campbx.com/api",
    "operations": {
        "getMarketDepth": {
            "summary": "Provides information on the market depth of the current order book",
            "httpMethod": "GET",
            "responseClass": "getMarketDepth",
            "uri": "xdepth.php"
        },
        "getTicker": {
            "summary": "Provides a high-level summary of the current bid/ask along with the last trade posted",
            "httpMethod": "GET",
            "responseClass": "getTicker",
            "uri": "xticker.php"
        },
        "getAccountBalances": {
            "summary": "Obtain latest account balances of your account (requires username/password and API access enabled)",
            "httpMethod": "POST",
            "uri": "myfunds.php",
            "responseClass": "getAccountBalances",
            "class": "Matmar10\\CampBX\\Command\\AuthenticatedCommand"
        },
        "getOrders": {
            "summary": "Get your list of open orders",
            "httpMethod": "POST",
            "uri": "myorders.php",
            "responseClass": "getOrders",
            "class": "Matmar10\\CampBX\\Command\\AuthenticatedCommand"
        },
        "generateDepositAddress": {
            "summary": "Generate a Bitcoin receiving address",
            "httpMethod": "POST",
            "uri": "getbtcaddr.php",
            "responseClass": "generateDepositAddress",
            "class": "Matmar10\\CampBX\\Command\\AuthenticatedCommand"
        },
        "sendBitcoin": {
            "summary": "Sends Bitcoin to the specified receiving wallet address",
            "httpMethod": "POST",
            "uri": "sendbtc.php",
            "responseClass": "sendBitcoin",
            "class": "Matmar10\\CampBX\\Command\\AuthenticatedCommand",
            "parameters": {
                "walletAddress": {
                    "type": "string",
                    "description": "The Bitcoin network public wallet receiving address to send the bitcoins to",
                    "required": true,
                    "location": "postField",
                    "sentAs": "BTCTo"
                },
                "amount": {
                    "type": ["number", "\\Matmar10\\Money\\Entity\\Money"],
                    "description": "The amount of bitcoins to send",
                    "required": true,
                    "location": "postField",
                    "sentAs": "BTCAmt",
                    "filters": [{
                        "method": "Matmar10\\CampBX\\Filter\\Request::convertMoneyToFloat",
                        "args": [ "@value" ]
                    }]
                }
            }
        },
        "placeTradeOrder": {
            "summary": "Place a trade order",
            "httpMethod": "POST",
            "uri": "tradeenter.php",
            "responseClass": "placeTradeOrder",
            "class": "Matmar10\\CampBX\\Command\\AuthenticatedCommand",
            "parameters": {
                "type": {
                    "type": "string",
                    "enum": ["ASK", "BID"],
                    "description": "Type of order (bid or ask)",
                    "required": true,
                    "location": "postField",
                    "sentAs": "TradeMode",
                    "filters": [{
                        "method": "Matmar10\\CampBX\\Filter\\Request::convertTradeOrderType",
                        "args": [ "@value", true ]
                    }]
                },
                "amount": {
                    "type": ["number", "object"],
                    "instanceOf": "Matmar10\\Money\\Entity\\Money",
                    "description": "The amount of the order in Bitcoin",
                    "required": true,
                    "location": "postField",
                    "sentAs": "Quantity",
                    "filters": [{
                        "method": "Matmar10\\CampBX\\Filter\\Request::convertTradeOrderAmountToQuantity",
                        "args": [ "@value" ]
                    }]
                },
                "price": {
                    "type": ["number", "object"],
                    "instanceOf": "Matmar10\\Money\\Entity\\Money",
                    "description": "The amount of the order in USD",
                    "required": true,
                    "location": "postField",
                    "sentAs": "Price",
                    "filters": [{
                        "method": "Matmar10\\CampBX\\Filter\\Request::convertTradeOrderPrice",
                        "args": [ "@value" ]
                    }]
                }
            }
        },
        "cancelTradeOrder": {
            "summary": "Cancel a trade order",
            "httpMethod": "POST",
            "uri": "tradecancel.php",
            "responseClass": "cancelTradeOrder",
            "class": "Matmar10\\CampBX\\Command\\AuthenticatedCommand",
            "type": {
                "type": "string",
                "enum": ["ASK", "BID"],
                "description": "Type of order (bid or ask)",
                "required": true,
                "location": "postField",
                "sentAs": "Type",
                "filters": [{
                    "method": "Matmar10\\CampBX\\Filter\\Request::convertTradeOrderType",
                    "args": [ "@value" ]
                }]
            },
            "id": {
                "type": "string",
                "description": "The order ID",
                "required": true,
                "location": "postField",
                "sentAs": "OrderID"
            }
        }
    },
    "models": {
        "getMarketDepth": {
            "type": "object",
            "properties": {
                "statusCode": {
                    "location": "statusCode",
                    "type": "integer"
                },
                "bid": {
                    "location": "json",
                    "sentAs": "Bids",
                    "filters": [{
                        "method": "Matmar10\\CampBX\\Filter\\Response::convertMarketDepth",
                        "args": [ "@value" ]
                    }]
                },
                "ask": {
                    "location": "json",
                    "sentAs": "Asks",
                    "filters": [
                        {
                            "method": "Matmar10\\CampBX\\Filter\\Response::convertMarketDepth",
                            "args": [ "@value" ]
                        }
                    ]
                }
            }
        },
        "getTicker": {
            "type": "object",
            "properties": {
                "lastTrade": {
                    "location": "json",
                    "sentAs": "Last Trade",
                    "type": "object",
                    "filters": [{
                        "method": "Matmar10\\CampBX\\Filter\\Response::asCurrencyPairFromFloat",
                        "args": [ "@value", "BTC", 8, 8, "USD", 2, 2, "B⃦", "$"]
                    }]
                },
                "bid": {
                    "location": "json",
                    "sentAs": "Best Bid",
                    "type": "object",
                    "filters": [{
                        "method": "Matmar10\\CampBX\\Filter\\Response::asCurrencyPairFromFloat",
                        "args": [ "@value", "BTC", 8, 8, "USD", 2, 2, "B⃦", "$"]
                    }]
                },
                "ask": {
                    "location": "json",
                    "sentAs": "Best Ask",
                    "type": "object",
                    "filters": [{
                        "method": "Matmar10\\CampBX\\Filter\\Response::asCurrencyPairFromFloat",
                        "args": [ "@value", "BTC", 8, 8, "USD", 2, 2, "B⃦", "$"]
                    }]
                }
            }
        },
        "getAccountBalances": {
            "type": "object",
            "properties": {
                "totalUSD": {
                    "location": "json",
                    "sentAs": "Total USD",
                    "type": "object",
                    "filters": [{
                        "method": "Matmar10\\CampBX\\Filter\\Response::asMoneyFromFloat",
                        "args": [ "@value", "USD", 2, 2, "$" ]
                    }]
                },
                "totalBTC": {
                    "location": "json",
                    "sentAs": "Total BTC",
                    "type": "object",
                    "filters": [{
                        "method": "Matmar10\\CampBX\\Filter\\Response::asMoneyFromFloat",
                        "args": [ "@value", "BTC", 8, 8, "B⃦" ]
                    }]
                },
                "liquidUSD": {
                    "location": "json",
                    "sentAs": "Liquid USD",
                    "type": "object",
                    "filters": [{
                        "method": "Matmar10\\CampBX\\Filter\\Response::asMoneyFromFloat",
                        "args": [ "@value", "USD", 2, 2, "$" ]
                    }]
                },
                "liquidBTC": {
                    "location": "json",
                    "sentAs": "Liquid BTC",
                    "type": "object",
                    "filters": [{
                        "method": "Matmar10\\CampBX\\Filter\\Response::asMoneyFromFloat",
                        "args": [ "@value", "BTC", 8, 8, "B⃦" ]
                    }]
                },
                "marginUSD": {
                    "location": "json",
                    "sentAs": "Margin Account USD",
                    "type": "object",
                    "filters": [{
                        "method": "Matmar10\\CampBX\\Filter\\Response::asMoneyFromFloat",
                        "args": [ "@value", "USD", 2, 2, "$" ]
                    }]
                },
                "marginBTC": {
                    "location": "json",
                    "sentAs": "Margin Account BTC",
                    "type": "object",
                    "filters": [{
                        "method": "Matmar10\\CampBX\\Filter\\Response::asMoneyFromFloat",
                        "args": [ "@value", "BTC", 8, 8, "B⃦" ]
                    }]
                }
            }
        },
        "getOrders": {
            "type": "object",
            "properties": {
                "bid": {
                    "location": "json",
                    "sentAs": "Buy",
                    "type": "array",
                    "filters": [{
                        "method": "Matmar10\\CampBX\\Filter\\Response::normalizeOrdersListEmptyArray",
                        "args": [ "@value" ]
                    }],
                    "items": {
                        "type": "object",
                        "filters": [
                            {
                                "method": "Matmar10\\CampBX\\Filter\\Response::marshalResourceProxy",
                                "args": [ "@value" ]
                            }
                        ],
                        "properties": {
                            "entered": {
                                "sentAs": "Order Entered",
                                "type": "object",
                                "filters": [{
                                    "method": "Matmar10\\CampBX\\Filter\\Response::marshalStringToDateTime",
                                    "args": [ "@value", "America/New_York" ]
                                }]
                            },
                            "expires": {
                                "sentAs": "Order Expiry",
                                "type": "object",
                                "filters": [{
                                    "method": "Matmar10\\CampBX\\Filter\\Response::marshalStringToDateTime",
                                    "args": [ "@value", "America/New_York" ]
                                }]
                            },
                            "type": {
                                "sentAs": "Order Type",
                                "type": "string"
                            },
                            "marginPercent": {
                                "sentAs": "Margin Percent",
                                "type": "boolean",
                                "filters": [{
                                    "method": "Matmar10\\CampBX\\Filter\\Response::marshalMarginPercent",
                                    "args": [ "@value" ]
                                }]
                            },
                            "quantity": {
                                "sentAs": "Quantity",
                                "type": "\\Matmar10\\Money\\Entity\\Money",
                                "filters": [{
                                    "method": "Matmar10\\CampBX\\Filter\\Response::asMoneyFromFloat",
                                    "args": [ "@value", "BTC", 8, 8, "B⃦" ]
                                }]
                            },
                            "price": {
                                "sentAs": "Price",
                                "type": "\\Matmar10\\Money\\Entity\\CurrencyPair",
                                "filters": [{
                                    "method": "Matmar10\\CampBX\\Filter\\Response::asCurrencyPairFromFloat",
                                    "args": [ "@value", "BTC", 8, 8, "USD", 2, 2, "B⃦", "$" ]
                                }]
                            },
                            "stopLoss": {
                                "sentAs": "Stop-loss",
                                "type": "boolean",
                                "filters": [{
                                    "method": "Matmar10\\CampBX\\Filter\\Response::parseBoolean",
                                    "args": [ "@value"  ]
                                }]
                            },
                            "fillType": {
                                "sentAs": "Fill Type",
                                "type": "string"
                            },
                            "darkPool": {
                                "sentAs": "Dark Pool",
                                "type": "boolean",
                                "filters": [{
                                    "method": "Matmar10\\CampBX\\Filter\\Response::parseBoolean",
                                    "args": [ "@value"  ]
                                }]
                            },
                            "id": {
                                "sentAs": "Order ID",
                                "type": "string"
                            }
                        }
                    }
                },
                "ask": {
                    "location": "json",
                    "sentAs": "Sell",
                    "type": "array",
                    "filters": [{
                        "method": "Matmar10\\CampBX\\Filter\\Response::normalizeOrdersListEmptyArray",
                        "args": [ "@value" ]
                    }],
                    "items": {
                        "type": "object",
                        "properties": {
                            "entered": {
                                "sentAs": "Order Entered",
                                "type": "object",
                                "filters": [{
                                    "method": "Matmar10\\CampBX\\Filter\\Response::marshalStringToDateTime",
                                    "args": [ "@value", "America/New_York" ]
                                }]
                            },
                            "expires": {
                                "sentAs": "Order Expiry",
                                "type": "object",
                                "filters": [{
                                    "method": "Matmar10\\CampBX\\Filter\\Response::marshalStringToDateTime",
                                    "args": [ "@value", "America/New_York" ]
                                }]
                            },
                            "type": {
                                "sentAs": "Order Type",
                                "type": "string"
                            },
                            "marginPercent": {
                                "sentAs": "Margin Percent",
                                "type": "boolean",
                                "filters": [{
                                    "method": "Matmar10\\CampBX\\Filter\\Response::marshalMarginPercent",
                                    "args": [ "@value" ]
                                }]
                            },
                            "quantity": {
                                "sentAs": "Quantity",
                                "type": "\\Matmar10\\Money\\Entity\\Money",
                                "filters": [{
                                    "method": "Matmar10\\CampBX\\Filter\\Response::asMoneyFromFloat",
                                    "args": [ "@value", "BTC", 8, 8, "B⃦" ]
                                }]
                            },
                            "price": {
                                "sentAs": "Price",
                                "type": "\\Matmar10\\Money\\Entity\\CurrencyPair",
                                "filters": [{
                                    "method": "Matmar10\\CampBX\\Filter\\Response::asCurrencyPairFromFloat",
                                    "args": [ "@value", "BTC", 8, 8, "USD", 2, 2, "B⃦", "$" ]
                                }]
                            },
                            "stopLoss": {
                                "sentAs": "Stop-loss",
                                "type": "boolean",
                                "filters": [{
                                    "method": "Matmar10\\CampBX\\Filter\\Response::parseBoolean",
                                    "args": [ "@value"  ]
                                }]
                            },
                            "fillType": {
                                "sentAs": "Fill Type",
                                "type": "string"
                            },
                            "darkPool": {
                                "sentAs": "Dark Pool",
                                "type": "boolean",
                                "filters": [{
                                    "method": "Matmar10\\CampBX\\Filter\\Response::parseBoolean",
                                    "args": [ "@value"  ]
                                }]
                            },
                            "id": {
                                "sentAs": "Order ID",
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "generateDepositAddress": {
            "type": "object",
            "properties": {
                "walletAddress": {
                    "location": "json",
                    "sentAs": "Success",
                    "type": "string"
                },
                "expires": {
                    "location": "json",
                    "sentAs": "Expiry",
                    "filters": [{
                        "method": "Matmar10\\CampBX\\Filter\\Response::convertSecondsToDateTime",
                        "args": [ "@value" ]
                    }]
                }
            }
        },
        "sendBitcoin": {
            "type": "object",
            "properties": {

            }
        },
        "placeTradeOrder": {
            "type": "object",
            "properties": {
                "id": {
                    "location": "json",
                    "sentAs": "Success",
                    "type": "string"
                }
            }
        },
        "cancelTradeOrder": {
            "type": "object",
            "properties": {
                "message": {
                    "location": "json",
                    "sentAs": "Success",
                    "type": "string"
                }
            }
        }
    }
}